{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2022-09-09T06:06:16.624Z",
    "end": "2022-09-09T06:06:24.949Z",
    "duration": 8325,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2e634df2-b3ab-45bb-a345-f58b32917f42",
      "title": "",
      "fullFile": "/Users/dikshant.agarwal/Documents/SupertestAPI/test/restfulbookerTest.spec.js",
      "file": "/test/restfulbookerTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a5f5a29b-7071-4e70-a59e-002af2e1b8d8",
          "title": "Restful Booker API Tests",
          "fullFile": "/Users/dikshant.agarwal/Documents/SupertestAPI/test/restfulbookerTest.spec.js",
          "file": "/test/restfulbookerTest.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Restful Booker API Tests\"",
              "fullTitle": "Restful Booker API Tests \"before all\" hook in \"Restful Booker API Tests\"",
              "timedOut": false,
              "duration": 1369,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n    .post('/auth')\n    .send(userauthdata)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function(err, res) {\n        expect(res.statusCode).to.be.equal(200);\n        expect(res.body.token).not.to.be.null;\n        token = res.body.token;\n        if (err) {\n            throw err;\n        }\n        done();\n    });",
              "err": {},
              "uuid": "00adc1ad-6eb2-4021-be68-0efa3f853883",
              "parentUUID": "a5f5a29b-7071-4e70-a59e-002af2e1b8d8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should successfully create a booking",
              "fullTitle": "Restful Booker API Tests should successfully create a booking",
              "timedOut": false,
              "duration": 1052,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n    .post('/booking')\n    .send(booking)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function(err, res) {\n        expect(res.statusCode).to.be.equal(200);\n        expect(res.body.bookingid).not.to.be.null;\n        expect(res.body.booking.firstname).to.be.equal(booking.firstname);\n        expect(res.body.booking.lastname).to.be.equal(booking.lastname);\n        expect(res.body.booking.totalprice).to.be.equal(booking.totalprice);\n        expect(res.body.booking.depositpaid).to.be.equal(booking.depositpaid);\n        expect(res.body.booking.bookingdates.checkin).to.be.equal(booking.bookingdates.checkin);\n        expect(res.body.booking.bookingdates.checkout).to.be.equal(booking.bookingdates.checkout);\n        expect(res.body.booking.additionalneeds).to.be.equal(booking.additionalneeds);\n        bookingId = res.body.bookingid;\n        if (err) {\n            throw err;\n        }\n        done();\n    });",
              "err": {},
              "uuid": "f2e8de78-28c7-4c86-a17b-1100a636111f",
              "parentUUID": "a5f5a29b-7071-4e70-a59e-002af2e1b8d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch the booking of the provided booking id",
              "fullTitle": "Restful Booker API Tests should fetch the booking of the provided booking id",
              "timedOut": false,
              "duration": 1182,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n    .get('/booking/' + bookingId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function(err, res) {\n        expect(res.statusCode).to.be.equal(200);\n        expect(res.body.firstname).to.be.equal(booking.firstname);\n        expect(res.body.lastname).to.be.equal(booking.lastname);\n        expect(res.body.totalprice).to.be.equal(booking.totalprice);\n        expect(res.body.depositpaid).to.be.equal(booking.depositpaid);\n        expect(res.body.bookingdates.checkin).to.be.equal(booking.bookingdates.checkin);\n        expect(res.body.bookingdates.checkout).to.be.equal(booking.bookingdates.checkout);\n        expect(res.body.additionalneeds).to.be.equal(booking.additionalneeds);\n        if (err) {\n            throw err;\n        }\n        done();\n    });",
              "err": {},
              "uuid": "8da01ca2-1715-4695-a0d5-8fa47226d57a",
              "parentUUID": "a5f5a29b-7071-4e70-a59e-002af2e1b8d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update the booking of the provided booking id using Put request",
              "fullTitle": "Restful Booker API Tests should update the booking of the provided booking id using Put request",
              "timedOut": false,
              "duration": 1098,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n    .put('/booking/' + bookingId)\n    .send(updatedbooking)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Cookie', 'token=' + token)\n    .end(function(err, res) {\n        expect(res.statusCode).to.be.equal(200);\n        expect(res.body.firstname).to.be.equal(updatedbooking.firstname);\n        expect(res.body.lastname).to.be.equal(updatedbooking.lastname);\n        expect(res.body.totalprice).to.be.equal(updatedbooking.totalprice);\n        expect(res.body.depositpaid).to.be.equal(updatedbooking.depositpaid);\n        expect(res.body.bookingdates.checkin).to.be.equal(updatedbooking.bookingdates.checkin);\n        expect(res.body.bookingdates.checkout).to.be.equal(updatedbooking.bookingdates.checkout);\n        expect(res.body.additionalneeds).to.be.equal(updatedbooking.additionalneeds);\n        if (err) {\n            throw err;\n        }\n        done();\n    });",
              "err": {},
              "uuid": "36571a12-2bf3-4d12-92f0-1db523d86212",
              "parentUUID": "a5f5a29b-7071-4e70-a59e-002af2e1b8d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update the firstname and lastname of booking of the provided booking id",
              "fullTitle": "Restful Booker API Tests should update the firstname and lastname of booking of the provided booking id",
              "timedOut": false,
              "duration": 1151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var firstname = 'Michael';\nvar lastname = 'Trenor';\nrequest(baseurl)\n    .patch('/booking/' + bookingId)\n    .send({ firstname: firstname, lastname: lastname })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Cookie', 'token=' + token)\n    .end(function(err, res) {\n        expect(res.statusCode).to.be.equal(200);\n        expect(res.body.firstname).to.be.equal(firstname);\n        expect(res.body.lastname).to.be.equal(lastname);\n        expect(res.body.totalprice).to.be.equal(updatedbooking.totalprice);\n        expect(res.body.depositpaid).to.be.equal(updatedbooking.depositpaid);\n        expect(res.body.bookingdates.checkin).to.be.equal(updatedbooking.bookingdates.checkin);\n        expect(res.body.bookingdates.checkout).to.be.equal(updatedbooking.bookingdates.checkout);\n        expect(res.body.additionalneeds).to.be.equal(updatedbooking.additionalneeds);\n        if (err) {\n            throw err;\n        }\n        done();\n    });",
              "err": {},
              "uuid": "d32e134b-f0f6-4658-897b-83843151be3b",
              "parentUUID": "a5f5a29b-7071-4e70-a59e-002af2e1b8d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should Delete the booking of the provided booking id",
              "fullTitle": "Restful Booker API Tests should Delete the booking of the provided booking id",
              "timedOut": false,
              "duration": 1225,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n    .delete('/booking/' + bookingId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Cookie', 'token=' + token)\n    .end(function(err, res) {\n        expect(res.statusCode).to.be.equal(201);\n        if (err) {\n            throw err;\n        }\n        done();\n    });",
              "err": {},
              "uuid": "f7530390-28fe-4e35-810f-8ab757302503",
              "parentUUID": "a5f5a29b-7071-4e70-a59e-002af2e1b8d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show 404 status code for deleted booking id",
              "fullTitle": "Restful Booker API Tests should show 404 status code for deleted booking id",
              "timedOut": false,
              "duration": 1229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(baseurl)\n    .get('/booking/' + bookingId)\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .end(function(err, res) {\n        expect(res.statusCode).to.be.equal(404);\n        if (err) {\n            throw err;\n        }\n        done();\n    });",
              "err": {},
              "uuid": "103feb97-8b9a-49cf-bb6c-97015cf23cc7",
              "parentUUID": "a5f5a29b-7071-4e70-a59e-002af2e1b8d8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f2e8de78-28c7-4c86-a17b-1100a636111f",
            "8da01ca2-1715-4695-a0d5-8fa47226d57a",
            "36571a12-2bf3-4d12-92f0-1db523d86212",
            "d32e134b-f0f6-4658-897b-83843151be3b",
            "f7530390-28fe-4e35-810f-8ab757302503",
            "103feb97-8b9a-49cf-bb6c-97015cf23cc7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6937,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}